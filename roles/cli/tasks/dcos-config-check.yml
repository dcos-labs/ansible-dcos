---
# this playbook searchs for current DC/OS config

- name: lookup DC/OS acs token
  set_fact: 
    dcos_cli_config_token: "{{ lookup('ini', 'dcos_acs_token section=core file={{ dcos_cli_config_loop.path }}') | regex_replace('^\"(.*)\"$', '\\1') }}"

- name: lookup DC/OS URL
  set_fact: 
    dcos_cli_config_url: "{{ lookup('ini', 'dcos_url section=core file={{ dcos_cli_config_loop.path }}') | regex_replace('^\"(.*)\"$', '\\1') }}"

- name: lookup DC/OS cluster name
  set_fact: 
    dcos_cli_config_cluster_name: "{{ lookup('ini', 'name section=cluster file={{ dcos_cli_config_loop.path }}') | regex_replace('^\"(.*)\"$', '\\1') }}"

- name: check if current DC/OS is already connected
  block:
    - name: lookup current DC/OS CLI config dir
      set_fact:    
        dcos_cli_config_dir: "{{ dcos_cli_config_loop.path | regex_replace('^(.*)/dcos.toml$', '\\1') }}"

    - name: change DC/OS CLI connection state
      set_fact:
        dcos_cli_configured: true
  vars:
    dcos_cli_url: "http{{ 's' if dcos_cli_tls else '' }}://{{ dcos_master_address }}"
  when: 
    - dcos_cli_config_url == dcos_cli_url
    - dcos_cli_config_cluster_name == dcos_cluster_name